	public static int insertCatalog(Datavalue cleanCatalogId, Datavalue base, Datavalue expires, Datavalue name, Datavalue version, Datavalue xmlns, Datavalue status) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalog", new Datavalue[]{cleanCatalogId, base, expires, name, version, xmlns, status});
		return runStatement(ps);
	}
	public static int insertCatalog(Catalog catalog) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalog", new Datavalue[]{catalog.getCleanCatalogId(), catalog.getBase(), catalog.getExpires(), catalog.getName(), catalog.getVersion(), catalog.getXmlns(), catalog.getStatus()});
		return runStatement(ps);
	}
	public static int insertCatalogDataset(int catalogId, int datasetId) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalog_dataset", new int[]{catalogId, datasetId});
		return runStatement(ps);
	}
	public static int insertCatalogDataset(CatalogDataset catalogDataset) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalog_dataset", new int[]{catalogDataset.getParentId(), catalogDataset.getChildId()});
		return runStatement(ps);
	}
	public static int insertCatalogProperty(int catalogId, Datavalue name, Datavalue value) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalog_property", new int[]{catalogId}, new Datavalue[]{name, value});
		return runStatement(ps);
	}
	public static int insertCatalogProperty(CatalogProperty catalogProperty) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalog_property", new int[]{catalogProperty.getCatalogId()}, new Datavalue[]{catalogProperty.getName(), catalogProperty.getValue()});
		return runStatement(ps);
	}
	public static int insertCatalogService(int catalogId, int serviceId) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalog_service", new int[]{catalogId, serviceId});
		return runStatement(ps);
	}
	public static int insertCatalogService(CatalogService catalogService) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalog_service", new int[]{catalogService.getParentId(), catalogService.getChildId()});
		return runStatement(ps);
	}
	public static int insertCatalogXlink(int catalogId, Datavalue value, Datavalue xlink) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalog_xlink", new int[]{catalogId}, new Datavalue[]{value, xlink});
		return runStatement(ps);
	}
	public static int insertCatalogXlink(CatalogXlink catalogXlink) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalog_xlink", new int[]{catalogXlink.getCatalogId()}, new Datavalue[]{catalogXlink.getValue(), catalogXlink.getXlink()});
		return runStatement(ps);
	}
	public static int insertCatalogref() throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalogref");
		return runStatement(ps);
	}
	public static int insertCatalogref(Catalogref catalogref) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalogref");
		return runStatement(ps);
	}
	public static int insertCatalogrefDocumentation(int catalogrefId, Datavalue value, Datavalue documentationenum) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalogref_documentation", new int[]{catalogrefId}, new Datavalue[]{value, documentationenum});
		return runStatement(ps);
	}
	public static int insertCatalogrefDocumentation(CatalogrefDocumentation catalogrefDocumentation) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalogref_documentation", new int[]{catalogrefDocumentation.getCatalogrefId()}, new Datavalue[]{catalogrefDocumentation.getValue(), catalogrefDocumentation.getDocumentationenum()});
		return runStatement(ps);
	}
	public static int insertCatalogrefDocumentationNamespace(int catalogrefDocumentationId, Datavalue namespace) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalogref_documentation_namespace", new int[]{catalogrefDocumentationId}, new Datavalue[]{namespace});
		return runStatement(ps);
	}
	public static int insertCatalogrefDocumentationNamespace(CatalogrefDocumentationNamespace catalogrefDocumentationNamespace) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalogref_documentation_namespace", new int[]{catalogrefDocumentationNamespace.getCatalogrefDocumentationId()}, new Datavalue[]{catalogrefDocumentationNamespace.getNamespace()});
		return runStatement(ps);
	}
	public static int insertCatalogrefDocumentationXlink(int catalogrefDocumentationId, Datavalue value, Datavalue xlink) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalogref_documentation_xlink", new int[]{catalogrefDocumentationId}, new Datavalue[]{value, xlink});
		return runStatement(ps);
	}
	public static int insertCatalogrefDocumentationXlink(CatalogrefDocumentationXlink catalogrefDocumentationXlink) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalogref_documentation_xlink", new int[]{catalogrefDocumentationXlink.getCatalogrefDocumentationId()}, new Datavalue[]{catalogrefDocumentationXlink.getValue(), catalogrefDocumentationXlink.getXlink()});
		return runStatement(ps);
	}
	public static int insertCatalogrefXlink(int catalogrefId, Datavalue value, Datavalue xlink) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalogref_xlink", new int[]{catalogrefId}, new Datavalue[]{value, xlink});
		return runStatement(ps);
	}
	public static int insertCatalogrefXlink(CatalogrefXlink catalogrefXlink) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_catalogref_xlink", new int[]{catalogrefXlink.getCatalogrefId()}, new Datavalue[]{catalogrefXlink.getValue(), catalogrefXlink.getXlink()});
		return runStatement(ps);
	}
	public static int insertDataset(Datavalue alias, Datavalue authority, Datavalue dId, Datavalue harvest, Datavalue name, Datavalue resourcecontrol, Datavalue serviceName, Datavalue urlPath, Datavalue collectiontype, Datavalue datasizeUnit, Datavalue dataType, Datavalue status) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset", new Datavalue[]{alias, authority, dId, harvest, name, resourcecontrol, serviceName, urlPath, collectiontype, datasizeUnit, dataType, status});
		return runStatement(ps);
	}
	public static int insertDataset(Dataset dataset) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset", new Datavalue[]{dataset.getAlias(), dataset.getAuthority(), dataset.getDId(), dataset.getHarvest(), dataset.getName(), dataset.getResourcecontrol(), dataset.getServiceName(), dataset.getUrlPath(), dataset.getCollectiontype(), dataset.getDatasizeUnit(), dataset.getDataType(), dataset.getStatus()});
		return runStatement(ps);
	}
	public static int insertDatasetAccess(int datasetId, Datavalue servicename, Datavalue urlpath, Datavalue dataformat) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset_access", new int[]{datasetId}, new Datavalue[]{servicename, urlpath, dataformat});
		return runStatement(ps);
	}
	public static int insertDatasetAccess(DatasetAccess datasetAccess) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset_access", new int[]{datasetAccess.getDatasetId()}, new Datavalue[]{datasetAccess.getServicename(), datasetAccess.getUrlpath(), datasetAccess.getDataformat()});
		return runStatement(ps);
	}
	public static int insertDatasetAccessDatasize(int datasetAccessId, Datavalue value, Datavalue units) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset_access_datasize", new int[]{datasetAccessId}, new Datavalue[]{value, units});
		return runStatement(ps);
	}
	public static int insertDatasetAccessDatasize(DatasetAccessDatasize datasetAccessDatasize) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset_access_datasize", new int[]{datasetAccessDatasize.getDatasetAccessId()}, new Datavalue[]{datasetAccessDatasize.getValue(), datasetAccessDatasize.getUnits()});
		return runStatement(ps);
	}
	public static int insertDatasetCatalogref(int datasetId, int catalogrefId) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset_catalogref", new int[]{datasetId, catalogrefId});
		return runStatement(ps);
	}
	public static int insertDatasetDataset(int parentId, int childId) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset_dataset", new int[]{parentId, childId});
		return runStatement(ps);
	}
	public static int insertDatasetDataset(DatasetDataset datasetDataset) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset_dataset", new int[]{datasetDataset.getParentId(), datasetDataset.getChildId()});
		return runStatement(ps);
	}
	public static int insertDatasetNcml(int datasetId) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset_ncml", new int[]{datasetId});
		return runStatement(ps);
	}
	public static int insertDatasetNcml(DatasetNcml datasetNcml) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset_ncml", new int[]{datasetNcml.getDatasetId()});
		return runStatement(ps);
	}
	public static int insertDatasetProperty(int datasetId, Datavalue name, Datavalue value) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset_property", new int[]{datasetId}, new Datavalue[]{name, value});
		return runStatement(ps);
	}
	public static int insertDatasetProperty(DatasetProperty datasetProperty) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset_property", new int[]{datasetProperty.getDatasetId()}, new Datavalue[]{datasetProperty.getName(), datasetProperty.getValue()});
		return runStatement(ps);
	}
	public static int insertDatasetService(int datasetId, int serviceId) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset_service", new int[]{datasetId, serviceId});
		return runStatement(ps);
	}
	public static int insertDatasetService(DatasetService datasetService) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset_service", new int[]{datasetService.getParentId(), datasetService.getChildId()});
		return runStatement(ps);
	}
	public static int insertDatasetTmg(int datasetId, int tmgId) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset_tmg", new int[]{datasetId, tmgId});
		return runStatement(ps);
	}
	public static int insertDatasetTmg(DatasetTmg datasetTmg) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_dataset_tmg", new int[]{datasetTmg.getParentId(), datasetTmg.getChildId()});
		return runStatement(ps);
	}
	public static int insertMetadata(Datavalue inherited, Datavalue metadatatype) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_metadata", new Datavalue[]{inherited, metadatatype});
		return runStatement(ps);
	}
	public static int insertMetadata(Metadata metadata) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_metadata", new Datavalue[]{metadata.getInherited(), metadata.getMetadatatype()});
		return runStatement(ps);
	}
	public static int insertMetadataNamespace(int metadataId, Datavalue namespace) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_metadata_namespace", new int[]{metadataId}, new Datavalue[]{namespace});
		return runStatement(ps);
	}
	public static int insertMetadataNamespace(MetadataNamespace metadataNamespace) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_metadata_namespace", new int[]{metadataNamespace.getMetadataId()}, new Datavalue[]{metadataNamespace.getNamespace()});
		return runStatement(ps);
	}
	public static int insertMetadataTmg(int metadataId, int tmgId) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_metadata_tmg", new int[]{metadataId, tmgId});
		return runStatement(ps);
	}
	public static int insertMetadataTmg(MetadataTmg metadataTmg) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_metadata_tmg", new int[]{metadataTmg.getParentId(), metadataTmg.getChildId()});
		return runStatement(ps);
	}
	public static int insertMetadataXlink(int metadataId, Datavalue value, Datavalue xlink) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_metadata_xlink", new int[]{metadataId}, new Datavalue[]{value, xlink});
		return runStatement(ps);
	}
	public static int insertMetadataXlink(MetadataXlink metadataXlink) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_metadata_xlink", new int[]{metadataXlink.getMetadataId()}, new Datavalue[]{metadataXlink.getValue(), metadataXlink.getXlink()});
		return runStatement(ps);
	}
	public static int insertService(Datavalue base, Datavalue desc, Datavalue name, Datavalue suffix, Datavalue serviceType, Datavalue status) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_service", new Datavalue[]{base, desc, name, suffix, serviceType, status});
		return runStatement(ps);
	}
	public static int insertService(Service service) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_service", new Datavalue[]{service.getBase(), service.getDesc(), service.getName(), service.getSuffix(), service.getServiceType(), service.getStatus()});
		return runStatement(ps);
	}
	public static int insertServiceDatasetroot(int serviceId, Datavalue location, Datavalue path) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_service_datasetroot", new int[]{serviceId}, new Datavalue[]{location, path});
		return runStatement(ps);
	}
	public static int insertServiceDatasetroot(ServiceDatasetroot serviceDatasetroot) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_service_datasetroot", new int[]{serviceDatasetroot.getServiceId()}, new Datavalue[]{serviceDatasetroot.getLocation(), serviceDatasetroot.getPath()});
		return runStatement(ps);
	}
	public static int insertServiceProperty(int serviceId, Datavalue name, Datavalue value) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_service_property", new int[]{serviceId}, new Datavalue[]{name, value});
		return runStatement(ps);
	}
	public static int insertServiceProperty(ServiceProperty serviceProperty) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_service_property", new int[]{serviceProperty.getServiceId()}, new Datavalue[]{serviceProperty.getName(), serviceProperty.getValue()});
		return runStatement(ps);
	}
	public static int insertServiceService(int parentId, int childId) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_service_service", new int[]{parentId, childId});
		return runStatement(ps);
	}
	public static int insertServiceService(ServiceService serviceService) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_service_service", new int[]{serviceService.getParentId(), serviceService.getChildId()});
		return runStatement(ps);
	}
	public static int insertTmg() throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg");
		return runStatement(ps);
	}
	public static int insertTmg(Tmg tmg) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg");
		return runStatement(ps);
	}
	public static int insertTmgAuthority(int tmgId, Datavalue authority) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_authority", new int[]{tmgId}, new Datavalue[]{authority});
		return runStatement(ps);
	}
	public static int insertTmgAuthority(TmgAuthority tmgAuthority) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_authority", new int[]{tmgAuthority.getTmgId()}, new Datavalue[]{tmgAuthority.getAuthority()});
		return runStatement(ps);
	}
	public static int insertTmgContributor(int tmgId, Datavalue name, Datavalue role) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_contributor", new int[]{tmgId}, new Datavalue[]{name, role});
		return runStatement(ps);
	}
	public static int insertTmgContributor(TmgContributor tmgContributor) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_contributor", new int[]{tmgContributor.getTmgId()}, new Datavalue[]{tmgContributor.getName(), tmgContributor.getRole()});
		return runStatement(ps);
	}
	public static int insertTmgCreator(int tmgId) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_creator", new int[]{tmgId});
		return runStatement(ps);
	}
	public static int insertTmgCreator(TmgCreator tmgCreator) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_creator", new int[]{tmgCreator.getTmgId()});
		return runStatement(ps);
	}
	public static int insertTmgCreatorContact(int tmgCreatorId, Datavalue email, Datavalue url) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_creator_contact", new int[]{tmgCreatorId}, new Datavalue[]{email, url});
		return runStatement(ps);
	}
	public static int insertTmgCreatorContact(TmgCreatorContact tmgCreatorContact) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_creator_contact", new int[]{tmgCreatorContact.getTmgCreatorId()}, new Datavalue[]{tmgCreatorContact.getEmail(), tmgCreatorContact.getUrl()});
		return runStatement(ps);
	}
	public static int insertTmgCreatorName(int tmgCreatorId, Datavalue value, Datavalue vocabulary) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_creator_name", new int[]{tmgCreatorId}, new Datavalue[]{value, vocabulary});
		return runStatement(ps);
	}
	public static int insertTmgCreatorName(TmgCreatorName tmgCreatorName) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_creator_name", new int[]{tmgCreatorName.getTmgCreatorId()}, new Datavalue[]{tmgCreatorName.getValue(), tmgCreatorName.getVocabulary()});
		return runStatement(ps);
	}
	public static int insertTmgDataformat(int tmgId, Datavalue dataformat) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_dataformat", new int[]{tmgId}, new Datavalue[]{dataformat});
		return runStatement(ps);
	}
	public static int insertTmgDataformat(TmgDataformat tmgDataformat) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_dataformat", new int[]{tmgDataformat.getTmgId()}, new Datavalue[]{tmgDataformat.getDataformat()});
		return runStatement(ps);
	}
	public static int insertTmgDatasize(int tmgId, Datavalue value, Datavalue units) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_datasize", new int[]{tmgId}, new Datavalue[]{value, units});
		return runStatement(ps);
	}
	public static int insertTmgDatasize(TmgDatasize tmgDatasize) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_datasize", new int[]{tmgDatasize.getTmgId()}, new Datavalue[]{tmgDatasize.getValue(), tmgDatasize.getUnits()});
		return runStatement(ps);
	}
	public static int insertTmgDatatype(int tmgId, Datavalue datatype) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_datatype", new int[]{tmgId}, new Datavalue[]{datatype});
		return runStatement(ps);
	}
	public static int insertTmgDatatype(TmgDatatype tmgDatatype) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_datatype", new int[]{tmgDatatype.getTmgId()}, new Datavalue[]{tmgDatatype.getDatatype()});
		return runStatement(ps);
	}
	public static int insertTmgDate(int tmgId, Datavalue format, Datavalue value, Datavalue dateenum) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_date", new int[]{tmgId}, new Datavalue[]{format, value, dateenum});
		return runStatement(ps);
	}
	public static int insertTmgDate(TmgDate tmgDate) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_date", new int[]{tmgDate.getTmgId()}, new Datavalue[]{tmgDate.getFormat(), tmgDate.getValue(), tmgDate.getDateenum()});
		return runStatement(ps);
	}
	public static int insertTmgDocumentation(int tmgId, Datavalue value, Datavalue documentationenum) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_documentation", new int[]{tmgId}, new Datavalue[]{value, documentationenum});
		return runStatement(ps);
	}
	public static int insertTmgDocumentation(TmgDocumentation tmgDocumentation) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_documentation", new int[]{tmgDocumentation.getTmgId()}, new Datavalue[]{tmgDocumentation.getValue(), tmgDocumentation.getDocumentationenum()});
		return runStatement(ps);
	}
	public static int insertTmgDocumentationNamespace(int tmgDocumentationId, Datavalue namespace) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_documentation_namespace", new int[]{tmgDocumentationId}, new Datavalue[]{namespace});
		return runStatement(ps);
	}
	public static int insertTmgDocumentationNamespace(TmgDocumentationNamespace tmgDocumentationNamespace) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_documentation_namespace", new int[]{tmgDocumentationNamespace.getTmgDocumentationId()}, new Datavalue[]{tmgDocumentationNamespace.getNamespace()});
		return runStatement(ps);
	}
	public static int insertTmgDocumentationXlink(int tmgDocumentationId, Datavalue value, Datavalue xlink) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_documentation_xlink", new int[]{tmgDocumentationId}, new Datavalue[]{value, xlink});
		return runStatement(ps);
	}
	public static int insertTmgDocumentationXlink(TmgDocumentationXlink tmgDocumentationXlink) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_documentation_xlink", new int[]{tmgDocumentationXlink.getTmgDocumentationId()}, new Datavalue[]{tmgDocumentationXlink.getValue(), tmgDocumentationXlink.getXlink()});
		return runStatement(ps);
	}
	public static int insertTmgGeospatialcoverage(int tmgId, Datavalue upordown) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_geospatialcoverage", new int[]{tmgId}, new Datavalue[]{upordown});
		return runStatement(ps);
	}
	public static int insertTmgGeospatialcoverage(TmgGeospatialcoverage tmgGeospatialcoverage) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_geospatialcoverage", new int[]{tmgGeospatialcoverage.getTmgId()}, new Datavalue[]{tmgGeospatialcoverage.getUpordown()});
		return runStatement(ps);
	}
	public static int insertTmgGeospatialcoverageEastwest(int tmgGeospatialcoverageId, Datavalue resolution, Datavalue size, Datavalue start, Datavalue units) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_geospatialcoverage_eastwest", new int[]{tmgGeospatialcoverageId}, new Datavalue[]{resolution, size, start, units});
		return runStatement(ps);
	}
	public static int insertTmgGeospatialcoverageEastwest(TmgGeospatialcoverageEastwest tmgGeospatialcoverageEastwest) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_geospatialcoverage_eastwest", new int[]{tmgGeospatialcoverageEastwest.getTmgGeospatialcoverageId()}, new Datavalue[]{tmgGeospatialcoverageEastwest.getResolution(), tmgGeospatialcoverageEastwest.getSize(), tmgGeospatialcoverageEastwest.getStart(), tmgGeospatialcoverageEastwest.getUnits()});
		return runStatement(ps);
	}
	public static int insertTmgGeospatialcoverageName(int tmgGeospatialcoverageId, Datavalue value, Datavalue vocabulary) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_geospatialcoverage_name", new int[]{tmgGeospatialcoverageId}, new Datavalue[]{value, vocabulary});
		return runStatement(ps);
	}
	public static int insertTmgGeospatialcoverageName(TmgGeospatialcoverageName tmgGeospatialcoverageName) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_geospatialcoverage_name", new int[]{tmgGeospatialcoverageName.getTmgGeospatialcoverageId()}, new Datavalue[]{tmgGeospatialcoverageName.getValue(), tmgGeospatialcoverageName.getVocabulary()});
		return runStatement(ps);
	}
	public static int insertTmgGeospatialcoverageNorthsouth(int tmgGeospatialcoverageId, Datavalue resolution, Datavalue size, Datavalue start, Datavalue units) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_geospatialcoverage_northsouth", new int[]{tmgGeospatialcoverageId}, new Datavalue[]{resolution, size, start, units});
		return runStatement(ps);
	}
	public static int insertTmgGeospatialcoverageNorthsouth(TmgGeospatialcoverageNorthsouth tmgGeospatialcoverageNorthsouth) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_geospatialcoverage_northsouth", new int[]{tmgGeospatialcoverageNorthsouth.getTmgGeospatialcoverageId()}, new Datavalue[]{tmgGeospatialcoverageNorthsouth.getResolution(), tmgGeospatialcoverageNorthsouth.getSize(), tmgGeospatialcoverageNorthsouth.getStart(), tmgGeospatialcoverageNorthsouth.getUnits()});
		return runStatement(ps);
	}
	public static int insertTmgGeospatialcoverageUpdown(int tmgGeospatialcoverageId, Datavalue resolution, Datavalue size, Datavalue start, Datavalue units) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_geospatialcoverage_updown", new int[]{tmgGeospatialcoverageId}, new Datavalue[]{resolution, size, start, units});
		return runStatement(ps);
	}
	public static int insertTmgGeospatialcoverageUpdown(TmgGeospatialcoverageUpdown tmgGeospatialcoverageUpdown) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_geospatialcoverage_updown", new int[]{tmgGeospatialcoverageUpdown.getTmgGeospatialcoverageId()}, new Datavalue[]{tmgGeospatialcoverageUpdown.getResolution(), tmgGeospatialcoverageUpdown.getSize(), tmgGeospatialcoverageUpdown.getStart(), tmgGeospatialcoverageUpdown.getUnits()});
		return runStatement(ps);
	}
	public static int insertTmgKeyword(int tmgId, Datavalue value, Datavalue vocabulary) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_keyword", new int[]{tmgId}, new Datavalue[]{value, vocabulary});
		return runStatement(ps);
	}
	public static int insertTmgKeyword(TmgKeyword tmgKeyword) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_keyword", new int[]{tmgKeyword.getTmgId()}, new Datavalue[]{tmgKeyword.getValue(), tmgKeyword.getVocabulary()});
		return runStatement(ps);
	}
	public static int insertTmgMetadata(int tmgId, int metadataId) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_metadata", new int[]{tmgId, metadataId});
		return runStatement(ps);
	}
	public static int insertTmgMetadata(TmgMetadata tmgMetadata) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_metadata", new int[]{tmgMetadata.getParentId(), tmgMetadata.getChildId()});
		return runStatement(ps);
	}
	public static int insertTmgProject(int tmgId, Datavalue value, Datavalue vocabulary) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_project", new int[]{tmgId}, new Datavalue[]{value, vocabulary});
		return runStatement(ps);
	}
	public static int insertTmgProject(TmgProject tmgProject) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_project", new int[]{tmgProject.getTmgId()}, new Datavalue[]{tmgProject.getValue(), tmgProject.getVocabulary()});
		return runStatement(ps);
	}
	public static int insertTmgProperty(int tmgId, Datavalue name, Datavalue value) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_property", new int[]{tmgId}, new Datavalue[]{name, value});
		return runStatement(ps);
	}
	public static int insertTmgProperty(TmgProperty tmgProperty) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_property", new int[]{tmgProperty.getTmgId()}, new Datavalue[]{tmgProperty.getName(), tmgProperty.getValue()});
		return runStatement(ps);
	}
	public static int insertTmgPublisher(int tmgId) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_publisher", new int[]{tmgId});
		return runStatement(ps);
	}
	public static int insertTmgPublisher(TmgPublisher tmgPublisher) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_publisher", new int[]{tmgPublisher.getTmgId()});
		return runStatement(ps);
	}
	public static int insertTmgPublisherContact(int tmgPublisherId, Datavalue email, Datavalue url) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_publisher_contact", new int[]{tmgPublisherId}, new Datavalue[]{email, url});
		return runStatement(ps);
	}
	public static int insertTmgPublisherContact(TmgPublisherContact tmgPublisherContact) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_publisher_contact", new int[]{tmgPublisherContact.getTmgPublisherId()}, new Datavalue[]{tmgPublisherContact.getEmail(), tmgPublisherContact.getUrl()});
		return runStatement(ps);
	}
	public static int insertTmgPublisherName(int tmgPublisherId, Datavalue value, Datavalue vocabulary) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_publisher_name", new int[]{tmgPublisherId}, new Datavalue[]{value, vocabulary});
		return runStatement(ps);
	}
	public static int insertTmgPublisherName(TmgPublisherName tmgPublisherName) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_publisher_name", new int[]{tmgPublisherName.getTmgPublisherId()}, new Datavalue[]{tmgPublisherName.getValue(), tmgPublisherName.getVocabulary()});
		return runStatement(ps);
	}
	public static int insertTmgServicename(int tmgId, Datavalue servicename) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_servicename", new int[]{tmgId}, new Datavalue[]{servicename});
		return runStatement(ps);
	}
	public static int insertTmgServicename(TmgServicename tmgServicename) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_servicename", new int[]{tmgServicename.getTmgId()}, new Datavalue[]{tmgServicename.getServicename()});
		return runStatement(ps);
	}
	public static int insertTmgTimecoverage(int tmgId, Datavalue resolution) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_timecoverage", new int[]{tmgId}, new Datavalue[]{resolution});
		return runStatement(ps);
	}
	public static int insertTmgTimecoverage(TmgTimecoverage tmgTimecoverage) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_timecoverage", new int[]{tmgTimecoverage.getTmgId()}, new Datavalue[]{tmgTimecoverage.getResolution()});
		return runStatement(ps);
	}
	public static int insertTmgTimecoverageDuration(int tmgTimecoverageId, Datavalue duration) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_timecoverage_duration", new int[]{tmgTimecoverageId}, new Datavalue[]{duration});
		return runStatement(ps);
	}
	public static int insertTmgTimecoverageDuration(TmgTimecoverageDuration tmgTimecoverageDuration) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_timecoverage_duration", new int[]{tmgTimecoverageDuration.getTmgTimecoverageId()}, new Datavalue[]{tmgTimecoverageDuration.getDuration()});
		return runStatement(ps);
	}
	public static int insertTmgTimecoverageEnd(int tmgTimecoverageId, Datavalue format, Datavalue value, Datavalue dateenum) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_timecoverage_end", new int[]{tmgTimecoverageId}, new Datavalue[]{format, value, dateenum});
		return runStatement(ps);
	}
	public static int insertTmgTimecoverageEnd(TmgTimecoverageEnd tmgTimecoverageEnd) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_timecoverage_end", new int[]{tmgTimecoverageEnd.getTmgTimecoverageId()}, new Datavalue[]{tmgTimecoverageEnd.getFormat(), tmgTimecoverageEnd.getValue(), tmgTimecoverageEnd.getDateenum()});
		return runStatement(ps);
	}
	public static int insertTmgTimecoverageResolution(int tmgTimecoverageId, Datavalue duration) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_timecoverage_resolution", new int[]{tmgTimecoverageId}, new Datavalue[]{duration});
		return runStatement(ps);
	}
	public static int insertTmgTimecoverageResolution(TmgTimecoverageResolution tmgTimecoverageResolution) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_timecoverage_resolution", new int[]{tmgTimecoverageResolution.getTmgTimecoverageId()}, new Datavalue[]{tmgTimecoverageResolution.getDuration()});
		return runStatement(ps);
	}
	public static int insertTmgTimecoverageStart(int tmgTimecoverageId, Datavalue format, Datavalue value, Datavalue dateenum) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_timecoverage_start", new int[]{tmgTimecoverageId}, new Datavalue[]{format, value, dateenum});
		return runStatement(ps);
	}
	public static int insertTmgTimecoverageStart(TmgTimecoverageStart tmgTimecoverageStart) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_timecoverage_start", new int[]{tmgTimecoverageStart.getTmgTimecoverageId()}, new Datavalue[]{tmgTimecoverageStart.getFormat(), tmgTimecoverageStart.getValue(), tmgTimecoverageStart.getDateenum()});
		return runStatement(ps);
	}
	public static int insertTmgVariables(int tmgId, Datavalue vocabulary) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_variables", new int[]{tmgId}, new Datavalue[]{vocabulary});
		return runStatement(ps);
	}
	public static int insertTmgVariables(TmgVariables tmgVariables) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_variables", new int[]{tmgVariables.getTmgId()}, new Datavalue[]{tmgVariables.getVocabulary()});
		return runStatement(ps);
	}
	public static int insertTmgVariablesVariable(int tmgVariablesId, Datavalue name, Datavalue units, Datavalue vocabularyName) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_variables_variable", new int[]{tmgVariablesId}, new Datavalue[]{name, units, vocabularyName});
		return runStatement(ps);
	}
	public static int insertTmgVariablesVariable(TmgVariablesVariable tmgVariablesVariable) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_variables_variable", new int[]{tmgVariablesVariable.getTmgVariablesId()}, new Datavalue[]{tmgVariablesVariable.getName(), tmgVariablesVariable.getUnits(), tmgVariablesVariable.getVocabularyName()});
		return runStatement(ps);
	}
	public static int insertTmgVariablesVariablemap(int tmgVariablesId, Datavalue value, Datavalue xlink) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_variables_variablemap", new int[]{tmgVariablesId}, new Datavalue[]{value, xlink});
		return runStatement(ps);
	}
	public static int insertTmgVariablesVariablemap(TmgVariablesVariablemap tmgVariablesVariablemap) throws Exception{
		PreparedStatement ps = setPreparedStatement("insert_tmg_variables_variablemap", new int[]{tmgVariablesVariablemap.getTmgVariablesId()}, new Datavalue[]{tmgVariablesVariablemap.getValue(), tmgVariablesVariablemap.getXlink()});
		return runStatement(ps);
	}
