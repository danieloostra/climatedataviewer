!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! $RCSfile: LAS_initialize_dataset.jnl

! This is the first part of LAS_initialize_data.jnl used for standard and
! customized init scripts

! $Author: ansley, jing
! $Date: 2007/29/2007

! 6/29/2007
! Allow for data_0_units or data_1_units etc to be defined a null string or a
! string containing a single space. If data_0_units is either undefined or is 
! one of these blank strings, then use the attnames syntax to see if the dataset 
! variable has units defined, and if so define the data_units symbol from that.


! The LAS_initialize_data.jnl script takes care of everything having to
! do with initializing a datset for later use.
!
! LAS_initialize_data.jnl takes an argument that specifies which data
! item [0|1|2|3|...] to create symbols for. 

DEFINE SYMBOL num ($1"0")

IF `($num) EQ 0 AND ($data_count) GT 1 and ($check_multi_regions_done"0|*>1) EQ 0` THEN
   GO LAS_check_multi_regions
   DEFINE SYMBOL check_multi_regions_done = 1
ENDIF

! TODO:  It would be nice if the java code removed this dependency upon
! TODO:  whether an operation was 'chained' or not.

! Check whether the source data was part of a 'chained' operation.
!ACM note: How does this jibe with what I do below changing data_url to data_num??

IF ($data_($num)_chained"0|1|*>1) THEN
  DEFINE SYMBOL data_url \"($data_($num)_file)\"
ELSE
  DEFINE SYMBOL data_url \"($data_($num)_url)\"
ENDIF

IF ($data_($num)_var"0|*>1") THEN 
   DEFINE SYMBOL data_var '($data_($num)_var)'
   DEFINE SYMBOL data_orig_var ($data_($num)_var)
   DEFINE SYMBOL data_var_nq ($data_($num)_var)

ENDIF

DEFINE SYMBOL data_name ($data_($num)_name)
IF `($data_($num)_name"0|*>1") EQ 0` THEN DEFINE SYMBOL data_name ($data_var)

DEFINE SYM var_num ($num)

! Put quotes around variable name in case its a Ferret reserved name like Z
! (Apparently addXML now does this automatically, so check for it already being in ' ')

IF ($data_($num)_var"0|*>1") THEN DEFINE SYMBOL data_var = `UPCASE("($data_var)")`
IF ($data_($num)_var"0|*>1") THEN DEFINE SYMBOL data_var_nq = `UPCASE("($data_var_nq)")`
IF ($data_($num)_var_nq"0|*>1") THEN DEFINE SYMBOL data_var_nq = `UPCASE("($data_var_nq)")`
LET varlen = `STRLEN("($data_var)")`
IF `STRINDEX("($data_var)", "'") EQ 1 AND STRRINDEX("($data_var)", "'") EQ varlen` THEN
   DEFINE SYMBOL surrounding_quotes_already = 1
   DEFINE SYMBOL data_var = `UPCASE("($data_($num)_var)")`
ELSE 
   IF ($data_($num)_var"0|*>1") THEN DEFINE SYMBOL data_var_nq = ($data_var)
   IF ($data_($num)_var"0|*>1") THEN DEFINE SYMBOL data_var = '($data_var)'
ENDIF

! Do the same for curvilinear coordinate variables if they are defined
IF ($ferret_curvi_coord_lon"0|*>1") THEN 
   DEFINE SYMBOL f_curv_lon = `UPCASE("($ferret_curvi_coord_lon)")`
   LET varlen = `STRLEN("($ferret_curvi_coord_lon)")`
   IF `STRINDEX("($ferret_curvi_coord_lon)", "'") EQ 1 AND STRRINDEX("($ferret_curvi_coord_lon)", "'") EQ varlen` THEN
      DEFINE SYMBOL curv_already_quote = 1
   ELSE 
      IF ($data_($num)_var"0|*>1") THEN DEFINE SYMBOL ferret_curvi_coord_lon = '($f_curv_lon)'
   ENDIF
ENDIF

IF ($ferret_curvi_coord_lat"0|*>1") THEN 
   DEFINE SYMBOL f_curv_lat = `UPCASE("($ferret_curvi_coord_lat)")`
   LET varlen = `STRLEN("($ferret_curvi_coord_lat)")`
   IF `STRINDEX("($ferret_curvi_coord_lat)", "'") EQ 1 AND STRRINDEX("($ferret_curvi_coord_lat)", "'") EQ varlen` THEN
      DEFINE SYMBOL curv_already_quote = 1
   ELSE 
      IF ($data_($num)_var"0|*>1") THEN DEFINE SYMBOL ferret_curvi_coord_lat = '($f_curv_lat)'
   ENDIF
ENDIF

! If the grids werent the same but were reconciled with an add_var, add that.
! The variables must be the same size. Check and set up a nice message if not.

IF ($add_to_var($num)"0|*>1") THEN 
   LET dvar = ($data_var) + ($add_to_var($num))
   DEFINE SYMBOL data_var = dvar
ENDIF

! Use the units passed in from the XML unless they are null; 
! in that case try to get from the dataset

! Do not define data_units with an empty string
IF `($data_($num)_units%1|"">1|*>0%) OR ($data_($num)_units%1|" ">1|*>0%)`  THEN 
   CANCEL SYMBOL data_units
   CANCEL SYMBOL data_($num)_units
ELIF ($data_($num)_units%1|" ">1|*>0%) THEN 
   CANCEL SYMBOL data_units
ELSE
   DEFINE SYMBOL data_units ($data_($num)_units)
ENDIF

! Check for single quotes and remove them. They are
! not needed on units strings

LET inquote = `STRINDEX("($data_($num)_units)", "'")`
IF `inquote GT 0` THEN
   let slen = `STRLEN("($data_($num)_units)")`
   DEFINE SYMBOL data_($num)_units = `SUBSTRING("($data_($num)_units)", 2, slen-2)`
ENDIF

IF ($data_units"0|*>1") THEN 
   DEFINE SYMBOL data_units (($data_($num)_units))
   IF `STRINDEX("($data_units)", "((") GT 0` THEN \
     DEFINE SYMBOL data_units ($data_($num)_units)
ENDIF

IF ($data_($num)_name"0|1|*>1) THEN 
   IF ($data_($num)_title"0|*>1") THEN DEFINE SYMBOL data_title ($data_($num)_title)
ELSE
   IF ($data_($num)_var"0|*>1") THEN DEFINE SYMBOL data_title ($data_($num)_var)
ENDIF

IF `($num) GT 0` THEN DEFINE SYMBOL variable_($num)_lab = ($data_title)
IF ($data_units"0|*>1") THEN 
   DEFINE SYMBOL units_lab = ($data_units)
   IF `($num) GT 0` THEN DEFINE SYMBOL units_($num)_lab = ($data_units)
ENDIF

DEFINE SYMBOL ferret_plot_title ($data_title) ($data_units)

! SET DATA and check for errors

SET DATA ($data_url)

! Check for units sent in as ""
DEFINE SYMBOL ulen `STRLEN("(data_($num)_units)")`
IF `($ulen) LE 2` THEN  
    PPL SET isquote1 $EXTRACT(1,1,data_($num)_units)
    PPL SET isquote2 $EXTRACT(2,1,data_($num)_units)
    IF  `($isquote1%0|"">1|*>0%) OR ($isquote2%0|"">1|*>0%)` THEN \
      DEFINE SYMBOL units_double_quotes = 1
ENDIF

IF `($units_double_quotes"0|*>1") EQ 0` THEN 
   LET ulen = STRLEN ("($data_($num)_units)")
   IF `(STRINDEX("($data_($num)_units)", "'") EQ 1) AND \
    (STRRINDEX("($data_($num)_units)", "'") EQ ulen)` THEN \
      DEFINE SYMBOL data_units `SUBSTRING("($data_($num)_units)", 2, ulen-2)`
ENDIF


IF ($fer_last_error"0|0|1|*>1") THEN
  DEFINE SYMBOL error_status = ERROR
  DEFINE SYMBOL error_type = DATA
  DEFINE SYMBOL error_string = The ($data_var) source file -- ($data_url) did not open successfully.
  EXIT/SCRIPT
ENDIF

SET DATA "($data_($num)_url)"
DEFINE SYMBOL dset($num) = `($data_var),RETURN=dsetnum`

! Here do sanity checks on Ferret properties, such as dep_axis_scale

GO LAS_check_fer_properties

! End of $RCSfile ------------LAS_initialize_dataset.jnl--------------------------
