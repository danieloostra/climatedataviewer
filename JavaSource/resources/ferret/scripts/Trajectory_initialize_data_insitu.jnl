!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Trajectory_initialize_data_insitu.jnl
!
! 
! Author: ansley 
! 6/2012 (from Jons_initialize_data_insitu.jnl)
!
DEFINE SYMBOL num ($1"0")

DEFINE SYMBOL data_($num)_dataset_id = ($data_($num)_dataset_name)


! The variable at the x and y locations

IF ($data_($num)_var"0|1|*>1") THEN DEFINE SYMBOL data_var ($data_($num)_var)
IF ($data_($num)_title"0|1|*>1") THEN DEFINE SYMBOL data_title ($data_($num)_title)

IF ($data_($num)_name"0|1|*>1") THEN DEFINE SYMBOL data_name ($data_($num)_name)

DEFINE SYMBOL ferret_plot_title ($data_title)

! Text variables have units of "text". In this case don't include units with the title

IF ($data_($num)_units"0|1|*>1") THEN 
   DEFINE SYMBOL data_units ($data_($num)_units)
   IF ($data_units"0|text>1|none>1|*>0") THEN CANCEL SYMBOL data_units
   IF ($data_units"0|*>1") THEN DEFINE SYMBOL ferret_plot_title ($data_title) (($data_units))
ENDIF

IF `($1"0") EQ 0` THEN 
   DEFINE SYMBOL variable_lab = ($ferret_plot_title)
ELSE
   IF `($1"0") EQ 1` THEN DEFINE SYMBOL variable_lab = \
   ($ferret_plot_title) vs ($variable_lab)
   IF `($1"0") EQ 2` THEN DEFINE SYMBOL variable_lab = \
   ($variable_lab) colored by ($ferret_plot_title)
ENDIF

! SET DATA and check for errors

SET DATA "($data_($num)_url)"

IF ($fer_last_error"0|*>1") THEN
  DEFINE SYMBOL error_status = ERROR
  DEFINE SYMBOL error_type = DATA
  DEFINE SYMBOL error_string = The ($data_x_var) source file -- ($data_url) did not open successfully.
  EXIT/SCRIPT
ENDIF

! Check for the global attribute query_result, and see if
! it contains a string No data found or other message
! Make assignments so that a blank plot will be drawn

LET nglobal_atts = ..nattrs
LET global_attnames = ..attnames
IF `IS_ELEMENT_OF_STR_N(global_attnames, "query_result")` THEN
   LET/D=1/title="no data found for this query"/units=" " latitude = `1,return=bad`
   LET/D=1/title="no data found for this query"/units=" " longitude = `1,return=bad`
   DEFINE SYMBOL data_0_var = longitude
   CANCEL SYMBOL data_0_units
   DEFINE SYMBOL data_1_var = latitude
   CANCEL SYMBOL data_1_units
   DEFINE SYMBOL data_2_var = latitude
   CANCEL SYMBOL data_2_units
   
   DEFINE SYMBOL data_var = ($data_($num)_var)
   DEFINE SYMBOL ferret_plot_var = ($data_($num)_var)

   DEFINE SYMBOL nodata = 1
   DEFINE SYMBOL ferret_plot_key = nokey
   CANCEL SYMBOL ferret_by_id
   DEFINE SYMBOL ferret_plot_title No data found to match this request
   CANCEL SYMBOL variable_lab
   DEFINE SYMBOL translate_math = 1

ENDIF

! Is it a cruise dataset?
! Is it a Profile or Trajectory dataset?
GO LAS_setup_dsg

IF ($rowvar"0|*>1") THEN DEFINE SYMBOL rowvar = rowsize

IF `($its_listing"0|*>1") AND ($num) EQ 0` THEN 

! For ascii listings, if a variable is the same as the trajectory variable,
! then remove reference to the trajectory variable. It is always listed as part
! of the metadata.

   REPEAT/RANGE=0:($data_count)/name=ivar (\
    DEFINE SYMBOL ivar = `ivar`;\
    IF `($data_($ivar)_var"0|($trajectory_variable"A")>1|*>0")` THEN DEFINE SYMBOL iremove = `ivar`;\
    )

   IF ($iremove"0|*>1) THEN 
      cancel symbol data_($iremove)_*
      DEFINE SYMBOL data_count = `($data_count) - 1`
   ENDIF

! Open the dataset. Rename the variables to varname_
! Keep original variable names as symbols data_0_var_orig, ...
! Treat longitude and latitude the same.
   GO LAS_rename_vars 0
   DEFINE SYMBOL data_var ($data_($num)_var)
ENDIF

IF `IS_ELEMENT_OF_STR_N(varnames, "($trajectory_variable)")` THEN
 GO Trajectory_initialize_cruise

! The x and y locations for insitu plots
! Use the _CoordinateAxisType to define data_x_var, data_y_var 
! and data_t_var if there is a time variable.

GO Trajectory_lon_lat_time

! If the plot is colored by trajectory ID then fake that variable, and exit

LET color_by_traj = 0

IF `($data_($num)_var"0|vid>1|($trajectory_variable)>1|*>0") AND ($nodata"0|*>1) EQ 0` THEN 
   DEF SYM rowvar = ($rowvar)
   LET color_by_traj = 1
ENDIF

! Or, is this a DSG file with cruise_id?

IF `($data_($num)_var"0|cruise_id>1|($trajectory_variable)>1|*>0") AND ($rowvar"0|*>1")` THEN LET color_by_traj = 1

IF `color_by_traj EQ 1` THEN

   USE "($data_($num)_url)"

   DEFINE SYMBOL data_($num)_var = `varnames[i=1]`
   DEFINE SYMBOL is_vid = 1
   DEFINE SYMBOL data_var_only ($data_($num)_var)
   DEFINE SYMBOL data_num `($data_($num)_var),RETURN=dset`

! Create the trajectory variables and symbols

   GO LAS_initialize_traj_id

   DEFINE SYMBOL ferret_poly_levels = `($rowvar),RETURN=lsize`
   LET id_data = COMPRESSI(XSEQUENCE(TRANSPOSE_XZ(id_by_c)))
   IF ($its_listing"0|*>1") THEN
      LET/TITLE="($data_($num)_var)" var_data = ($data_($num)_var)
      DEFINE SYMBOL data_($num)_var = ($data_($num)_var)
      DEFINE SYMBOL data_var = ($data_($num)_var)
      DEFINE SYMBOL ferret_plot_var = ($data_($num)_var)
   ELSE
      LET/TITLE="($data_($num)_name%ID%)" var_data = id_data[i=1:`($data_x_var),RETURN=isize`]
      DEFINE SYMBOL data_($num)_var = var_data
      DEFINE SYMBOL data_var = var_data
      DEFINE SYMBOL ferret_plot_var = var_data
   ENDIF

   DEFINE SYMBOL ferret_plot_title = Trajectory ID

   IF ($data_($num)_title"0|1|*>1") THEN DEFINE SYMBOL data_title ($data_($num)_title)

   IF ($data_($num)_name"0|1|*>1") THEN DEFINE SYMBOL data_name ($data_($num)_name)

   IF `($data_($num)_units%0|" ">0|*>1%) EQ 0` THEN CANCEL SYMBOL data_($num)_units
   IF ($data_($num)_units"0|1|*>1") THEN DEFINE SYMBOL data_units ($data_($num)_units)

   DEFINE SYMBOL ferret_plot_title ($data_title)
   IF ($data_($num)_units"0|1|*>1") THEN DEFINE SYMBOL ferret_plot_title ($data_title) ($data_($num)_units)
   
   DEFINE SYMBOL color_by_traj = 1

   EXIT/SCRIPT  ! dont need the rest of the setup
ENDIF


LET data_num = `($data_($num)_var),return=dsetnum`
DEFINE SYMBOL data_num = `data_num`

! Define symbols rounding out the range of the data so points are 
! not plotted on top of the axes.

! For property-property plots the longitude and latitude variables
! may or may not be in the intermediate netCDF file.

LET allvars = ..varnames

IF `IS_ELEMENT_OF_STR_N(allvars, "($data_x_var)")` THEN 
   STAT ($data_x_var)
   PPL %RANGE `($stat_min)`, `($stat_max)`, 10
   DEFINE SYMBOL x_rounded_range = ($ppl$range_low):($ppl$range_high)
ENDIF

IF `IS_ELEMENT_OF_STR_N(allvars, "($data_y_var)")` THEN 
   STAT ($data_y_var)
   PPL %RANGE `($stat_min)`, `($stat_max)`, 10
   DEFINE SYMBOL y_rounded_range = ($ppl$range_low):($ppl$range_high)
ENDIF

IF ($ferret_init_script"0|*>1") THEN GO ($ferret_init_script) ($1"0")

! There may be a variable representing measurements to use in coloring 
! a track plot, etc.


IF ($data_var"0|*>1") THEN
   DEFINE SYMBOL ferret_plot_var = ($data_var)

! The variable may be requested to be masked by a range
! on a second variable.

   IF ($ferret_mask_var"0|*>1") THEN
      LET masking_var_1 = if ($ferret_mask_var) LE ($ferret_mask_max) THEN ($ferret_mask_var)
      LET masking_var = if masking_var_1 GE ($ferret_mask_min) THEN 1
      DEFINE SYMBOL ferret_plot_var = ($ferret_plot_var)* masking_var

      DEFINE SYMBOL msk_min = `($ferret_mask_min),prec=3`
      DEFINE SYMBOL msk_max = `($ferret_mask_max),prec=3`

      DEFINE SYMBOL mask_title = <NL>@ACwhere ($ferret_mask_var) is in [($msk_min),($msk_max)]

      DEFINE SYMBOL ferret_plot_title = ($ferret_plot_title)($mask_title)
      DEFINE SYMBOL data_title = ($data_title)($mask_title)
   ENDIF

ENDIF

IF ($ferret_plot_title"0|*>1") THEN 
   SET VAR/TITLE="($ferret_plot_title)" ($data_var)[d=`data_num`] 
   SET VAR/TITLE="($ferret_plot_title)" ($ferret_plot_var)[d=`data_num`] 
ELSE
   IF ($data_title"0|*>1") THEN 
      SET VAR/TITLE="($data_title)" ($data_var)[d=`data_num`]
      SET VAR/TITLE="($data_title)" ($ferret_plot_var)[d=`data_num`]
   ENDIF
ENDIF

! Mark whether there are contour levels set on first entry. 
! Compute automatic open-ended levels.

IF `data_num EQ 1` THEN
  IF ($ferret_fill_levels"0|*>1") THEN DEFINE SYMBOL input_fill_levels = 1
   IF ($ferret_poly_levels"0|*>1") THEN 
      DEFINE SYMBOL ferret_fill_levels ($ferret_poly_levels)
      DEFINE SYMBOL input_fill_levels = 1
   ENDIF

   LET its_plot = `STRINDEX(UPCASE("($operation_ID)"), "PLOT") GT 0`
   IF `STRLEN("($ferret_view)") EQ 2 AND its_plot GT 0` THEN 
     IF ($ferret_fill_levels"1|closed>0|*>1") THEN GO LAS_auto_levels  
   ENDIF
   IF `STRLEN("($ferret_view)") EQ 2 AND STRINDEX("($operation_ID)", "poly") GT 0` THEN 
     IF ($ferret_fill_levels"1|closed>0|*>1") THEN GO LAS_auto_levels  
   ENDIF
   IF ($ferret_fill_levels"0|closed>1|*>0") THEN CANCEL SYMBOL ferret_poly_levels
   IF ($ferret_fill_levels"0|closed>1|*>0") THEN CANCEL SYMBOL input_fill_levels
   IF ($ferret_fill_levels"0|closed>1|*>0") THEN CANCEL SYMBOL ferret_fill_levels

   IF `($ferret_poly_levels"0|*>1") EQ 0` THEN \
      IF ($ferret_fill_levels"0|*>1") THEN DEFINE SYMBOL ferret_poly_levels ($ferret_fill_levels)
ENDIF

! Apply the expression in ferret_expression. $ represents the variable.

IF ($ferret_expression"0|*>1") THEN 
   LET ev = STRINDEX("($ferret_expression)", "$")
   IF `ev EQ 0` THEN
      DEFINE SYMBOL error_status = ERROR
      DEFINE SYMBOL error_type = EXPRESSION
      DEFINE SYMBOL error_string = The expression ($ferret_expression) must contain at least one $.
      EXIT/SCRIPT
   ENDIF

   LET en = STRLEN("($ferret_expression)")
   LET e1 = ev - 1
   LET e2 = ev + 1
   IF `e1 GT 0` THEN DEFINE SYMBOL expr1 = `SUBSTRING("($ferret_expression)", 1, e1)`
   IF `e2 LT en` THEN DEFINE SYMBOL expr2 = `SUBSTRING("($ferret_expression)", e2, en)`

   DEFINE SYMBOL ferret_plot_var ($expr1)($data_var)($expr2)
   DEFINE SYMBOL ferret_plot_title ($expr1)($data_title)($expr2)

! This works except if the expression has spaces around the $ characters.
! Otherwise Ferret seems to be looking for script arguments.

   LET esecond = STRINDEX("($expr2)", "$") 
   IF `esecond GT 0` THEN

      LET ev = STRINDEX("($expr2)", "$")
      LET en = STRLEN("($expr2)")
      LET e1 = ev - 1
      LET e2 = ev + 1
      IF `e1 GT 0` THEN DEFINE SYMBOL expr3 = `SUBSTRING("($expr2)", 1, e1)`
      IF `e2 LT en` THEN DEFINE SYMBOL expr4 = `SUBSTRING("($expr2)", e2, en)`

      DEFINE SYMBOL ferret_plot_var ($expr1)($data_var)($expr3)($data_var)($expr4)
      DEFINE SYMBOL ferret_plot_title ($expr1)($data_var)($expr3)($data_var)($expr4)
   ENDIF
ENDIF

CANCEL VAR data_num

IF ($nodata"0|*>1") THEN
   DEFINE SYMBOL ferret_plot_title No data found to match this request
   CANCEL SYMBOL variable_lab
ENDIF

!---------------- end of Trajectory_initialize_data_insitu.jnl -------------------------
